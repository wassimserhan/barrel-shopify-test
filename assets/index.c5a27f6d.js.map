{"version":3,"file":"index.c5a27f6d.js","sources":["../node_modules/.pnpm/micro-jsonp@1.0.1/node_modules/micro-jsonp/index.js","../node_modules/.pnpm/conform.js@0.3.3/node_modules/conform.js/index.js"],"sourcesContent":["let count = 0\n\n/**\n * Options:\n *  - param {String} query parameter + callback name\n *  - timeout {Number} how long to wait for a response \n *\n * @param {String} url\n * @param {Object} options\n */\nexport default (url, opts = {}) => {\n  const cb = `__c${count++}`\n  const param = opts.param || 'callback' \n  const query = `${param}=${cb}`\n  const timeout = opts.timeout || 60000\n  const response = opts.response ? opts.response : (err, data) => console.log(err, data)\n  const script = document.createElement('script')\n\n  const cancel = () => window[cb] ? cleanup() : null\n\n  const timer = timeout ? setTimeout(function(){\n    cleanup()\n    response(new Error('Timeout'))\n  }, timeout) : null\n\n  const cleanup = () => {\n    document.head.removeChild(script);\n    window[cb] = () => {} \n    if (timer) clearTimeout(timer)\n  }\n\n  window[cb] = data => {\n    response(null, data)\n    cleanup()\n  }\n\n  script.src = `${url}&${query}`\n  document.head.appendChild(script)\n\n  return cancel\n}\n","import nanoajax from 'nanoajax'\nimport jsonp from 'micro-jsonp'\nimport events from 'loop.js'\n\nconst merge = (target, ...args) => {\n  args.forEach(a => Object.keys(a).forEach(k => target[k] = a[k]))\n  return target\n}\n\nconst toQueryString = (fields) => {\n  let data = ''\n  let names = Object.keys(fields)\n\n  for (let i = 0; i < names.length; i++){\n    let field = fields[names[i]]\n    data += `${encodeURIComponent(field.name)}=${encodeURIComponent(field.value || '')}${i < names.length -1 ? '&' : ''}`\n  }\n\n  return data\n}\n\nconst isValid = (fields) => {\n  let keys = Object.keys(fields)\n\n  for (let i = 0; i < keys.length; i++){\n    let field = fields[keys[i]]\n    if (!field.valid) return false\n  }\n\n  return true\n}\n\nconst getFormFields = (form) => {\n  let fields = [].slice.call(form.querySelectorAll('[name]')) || false\n\n  if (!fields){ return }\n\n  return fields.map(f => ({\n    name: f.getAttribute('name'),\n    value: f.value || undefined,\n    valid: true,\n    node: f\n  }))\n} \n\nconst runValidation = (fields, tests) => tests.forEach((test => {\n  let field = fields.filter(f => test.name instanceof RegExp ? test.name.test(f.name) : test.name === f.name)[0]\n\n  if (!field){ return }\n\n  if (test.validate(field)){\n    if (test.success) { test.success(field) }\n    field.valid = true\n  } else {\n    if (test.error) { test.error(field) }\n    field.valid = false \n  }\n}))\n\nconst scrubAction = (base, data) => {\n  const query = base.match(/\\?/) ? true : false\n  return `${base}${query ? '&' : '?'}${toQueryString(data)}`\n}\n\nexport default (root, options = {}) => {\n  const form = root.getAttribute('action') ? root : root.getElementsByTagName('form')[0]\n  let fields = getFormFields(form) \n  const instance = Object.create(events({\n    getFields: () => fields\n  }))\n  \n  merge(instance, {\n    method: 'POST',\n    tests: [],\n    action: form.getAttribute('action'),\n    jsonp: false \n  }, options)\n\n  function jsonpSend(){\n    jsonp(scrubAction(instance.action, fields), {\n      param: instance.jsonp,\n      response: (err, data) => {\n        let o = { fields, res: err ? err : data, req: null }\n        err ? instance.emit('error', o) : instance.emit('success', o)\n      }\n    })\n  } \n\n  function send(){\n    return nanoajax.ajax({\n      url: instance.action,\n      body: toQueryString(fields),\n      method: instance.method\n    }, (status, res, req) => {\n      let success = status >= 200 && status <= 300\n      let o = { fields, res, req }\n      success ? instance.emit('success', o) : instance.emit('error', o)\n    })\n  }\n\n  form.onsubmit = e => {\n    e.preventDefault()\n\n    instance.emit('submit')\n\n    fields = getFormFields(form)\n\n    runValidation(fields, instance.tests)\n\n    if (isValid(fields)){\n      !!instance.jsonp ? jsonpSend() : send()\n    }\n  }\n\n  return instance\n}\n"],"names":["count","jsonp","url","opts","cb","query","timeout","response","err","data","script","cancel","cleanup","timer","merge","target","args","a","k","toQueryString","fields","names","i","field","isValid","keys","getFormFields","form","f","runValidation","tests","test","scrubAction","base","conform","root","options","instance","events","jsonpSend","o","send","nanoajax","status","res","req","success","e"],"mappings":"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","x_google_ignoreList":[0,1]}